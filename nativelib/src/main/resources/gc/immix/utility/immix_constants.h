//
// Created by Lukas Kellenberger on 11.04.17.
//

#include "constants.h"

#ifndef IMMIX_IMMIX_CONSTANTS_H
#define IMMIX_IMMIX_CONSTANTS_H

#define LOG_BYTES_IN_BLOCK (LOG_BYTES_IN_PAGE > 15 ? LOG_BYTES_IN_PAGE : 15)
#define BYTES_IN_BLOCK (1 << LOG_BYTES_IN_BLOCK)
#define LOG_PAGES_IN_BLOCK (LOG_BYTES_IN_BLOCK - LOG_BYTES_IN_PAGE)
#define PAGES_IN_BLOCK (1 << LOG_PAGES_IN_BLOCK)
#define LOG_BLOCKS_IN_CHUNK (LOG_BYTES_IN_CHUNK - LOG_BYTES_IN_BLOCK)
#define BLOCKS_IN_CHUNK (1 << LOG_BLOCKS_IN_CHUNK)

#define LOG_BYTES_IN_LINE 8
#define LOG_LINES_IN_BLOCK (LOG_BYTES_IN_BLOCK - LOG_BYTES_IN_LINE)
#define LINES_IN_BLOCK ((short_t) (1 << LOG_LINES_IN_BLOCK))
#define LOG_LINES_IN_CHUNK (LOG_BYTES_IN_CHUNK - LOG_BYTES_IN_LINE)
#define LINES_IN_CHUNK (1 << LOG_LINES_IN_CHUNK)

#define BYTES_IN_LINE (1 << LOG_BYTES_IN_LINE)

#define MAX_IMMIX_OBJECT_BYTES (BYTES_IN_BLOCK >> 1)

#define LOG_BLOCKS_IN_RECYCLE_ALLOC_CHUNK 4 // 3 + 15 -> 19 (512KB)
#define LOG_BYTES_IN_RECYCLE_ALLOC_CHUNK (LOG_BLOCKS_IN_RECYCLE_ALLOC_CHUNK + LOG_BYTES_IN_BLOCK)
#define BYTES_IN_RECYCLE_ALLOC_CHUNK (1 << LOG_BYTES_IN_RECYCLE_ALLOC_CHUNK)

#define MAX_BLOCK_MARK_STATE LINES_IN_BLOCK
#define MAX_CONSV_SPILL_COUNT ((short_t) (LINES_IN_BLOCK / 2))
#define SPILL_HISTOGRAM_BUCKETS ((short_t) (MAX_CONSV_SPILL_COUNT + 1))
#define MARK_HISTOGRAM_BUCKETS ((short_t) (LINES_IN_BLOCK + 1))


#define LOG_BYTES_IN_CHUNK 22
#define BYTES_IN_CHUNK (1 << LOG_BYTES_IN_CHUNK)


#define INT_TO_WORD_EXTEND_ZEROS(value)((word_t)value & 0xFFFFFFFFL)

#define RECYCLE_ALLOC_CHUNK_MASK INT_TO_WORD_EXTEND_ZEROS(BYTES_IN_RECYCLE_ALLOC_CHUNK - 1)
#define CHUNK_MASK INT_TO_WORD_EXTEND_ZEROS(BYTES_IN_CHUNK - 1)
#define BLOCK_MASK INT_TO_WORD_EXTEND_ZEROS(BYTES_IN_BLOCK - 1)
#define LINE_MASK INT_TO_WORD_EXTEND_ZEROS(BYTES_IN_LINE - 1)

#endif //IMMIX_IMMIX_CONSTANTS_H
